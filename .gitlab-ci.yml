stages:
  - build_&_test
variables:
  BOT_ID: ""
  CYPRESS_IMAGE: registry.gitlab.com/my-team/project/cypress:$CI_COMMIT_SHA 

.build_docker:
  stage: build_&_test
  image: alpinelinux/docker-cli
  before_script: 
    - ls
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CYPRESS_IMAGE -f Dockerfile/cypress.Dockerfile .
    - docker push $CYPRESS_IMAGE

run_tests:
  extends: .build_docker
  script:
    - docker pull $CYPRESS_IMAGE
    - export CONTAINER_ID=$(docker ps -q -f "label=com.gitlab.gitlab-runner.job.id=$CI_JOB_ID" -f "label=com.gitlab.gitlab-runner.type=build")
    # you can't mount a volume inside a docker for another subdocker, it will mount the host,
    # using --volumes-from and identifying the running docker container will allow us to mount the docker's volume for the subdocker container
    - docker run --volumes-from $CONTAINER_ID $CYPRESS_IMAGE --config-file cypress.config.js --spec bot-$BOT_ID.js
  artifacts:
    when: always
    paths:
      - ./videos/*.mp4 
    expire_in: 7 days
  retry: 1
